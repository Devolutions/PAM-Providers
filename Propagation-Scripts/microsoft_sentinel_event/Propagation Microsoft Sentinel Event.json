{
  "version": 2,
  "template": {
    "command": "<#\n.SYNOPSIS\n    Sends a password change notification to Microsoft Sentinel.\n\n.DESCRIPTION\n    This script uses the HTTP Data Collector API to send a password change event to Microsoft Sentinel. It creates a log \n    entry in the specified Log Analytics workspace with an event of \"password changed\" and the provided username.\n\n.PARAMETER WorkspaceId\n    The ID of the Log Analytics workspace where the event will be sent.\n\n.PARAMETER WorkspaceKey\n    The primary or secondary key of the Log Analytics workspace.\n\n.PARAMETER LogName\n    The name of the custom log in Log Analytics. Defaults to \"PasswordChangeNotification\".\n\n.PARAMETER UserName\n    The username associated with the password change event.\n\n.PARAMETER NewPassword\n    The new password, provided as a SecureString. This parameter is not used in the current implementation.\n\n.NOTES\n    - Requires PowerShell 7.0 or later.\n    - Prerequisites: \n      * Log Analytics workspace\n      * Microsoft Sentinel workspace\n      * Security Intelligence Pack: Security Insights\n    - To get the Workspace ID:\n      $workspace = Get-AzOperationalInsightsWorkspace -ResourceGroupName $resourceGroupName -Name $workspaceName -Location $location\n    - To get the Workspace Key:\n      $workspaceKey = (Get-AzOperationalInsightsWorkspaceSharedKey -ResourceGroupName $resourceGroupName -Name $workspaceName).PrimarySharedKey\n    - The log type in Log Analytics will be \"PasswordChangeNotification_CL\".\n\n.EXAMPLE\n    PS> $workspaceId = \"12345678-90ab-cdef-ghij-klmnopqrstuv\"\n    PS> $workspaceKey = ConvertTo-SecureString \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789==\" -AsPlainText -Force\n    PS> $userName = \"johndoe\"\n    PS> .\\Send-PasswordChangeNotification.ps1 -WorkspaceId $workspaceId -WorkspaceKey $workspaceKey -UserName $userName\n\n    This example sends a password change notification for user \"johndoe\" to the specified Log Analytics workspace.\n#>\n[CmdletBinding()]\nparam (\n    [Parameter(Mandatory)]\n    [string]$WorkspaceId,\n\n    [Parameter(Mandatory)]\n    [securestring]$WorkspaceKey,\n\n    [Parameter()]\n    [string]$LogName = \"PasswordChangeNotification\",\n\n    [Parameter(Mandatory)]\n    [string]$UserName,\n\n    [Parameter()]\n    [securestring]$NewPassword\n)\n\n$ErrorActionPreference = 'Stop'\n\nfunction decryptSecureString {\n    param(\n        [securestring]$SecureString\n    )\n    try {\n        $ptr = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($SecureString)\n        [System.Runtime.InteropServices.Marshal]::PtrToStringBSTR($ptr)\n    } finally {\n        [System.Runtime.InteropServices.Marshal]::ZeroFreeBSTR($ptr)\n    }\n}\n\nfunction New-Signature {\n    param (\n        [string]$WorkspaceId,\n        [string]$WorkspaceKey,\n        [string]$LogEntry\n    )\n\n    # Prepare the data to send\n    $currentTime = [DateTime]::UtcNow.ToString(\"o\")\n    Write-Debug \"Current time: $currentTime\"\n\n    $method = \"POST\"\n    $contentType = \"application/json\"\n    $resource = \"/api/logs\"\n    $rfc1123date = [DateTime]::UtcNow.ToString(\"r\")\n    Write-Debug \"RFC1123 date: $rfc1123date\"\n\n    $contentLength = ([System.Text.Encoding]::UTF8.GetBytes($LogEntry)).Length\n    Write-Debug \"Content length: $contentLength\"\n\n    $xHeaders = \"x-ms-date:$rfc1123date\"\n    $stringToHash = \"$method`n$contentLength`n$contentType`n$xHeaders`n$resource\"\n    $bytesToHash = [Text.Encoding]::UTF8.GetBytes($stringToHash)\n    $keyBytes = [Convert]::FromBase64String($WorkspaceKey)\n    $hmacsha256 = New-Object System.Security.Cryptography.HMACSHA256\n    $hmacsha256.Key = $keyBytes\n    $calculatedHash = $hmacsha256.ComputeHash($bytesToHash)\n    $encodedHash = [Convert]::ToBase64String($calculatedHash)\n    \n    # Return a hashtable with all the necessary information\n    @{\n        Signature = \"SharedKey ${WorkspaceId}:${encodedHash}\"\n        RFC1123Date = $rfc1123date\n        Method = $method\n        ContentType = $contentType\n        Resource = $resource\n        ContentLength = $contentLength\n    }\n}\n\nfunction Send-LogToSentinel {\n    param (\n        [string]$WorkspaceId,\n        [string]$LogName,\n        [string]$signature,\n        [string]$rfc1123date,\n        [string]$resource,\n        [string]$method,\n        [string]$contentType,\n        [string]$logEntry\n    )\n\n    $uri = \"https://${WorkspaceId}.ods.opinsights.azure.com${resource}?api-version=2016-04-01\"\n    Write-Debug \"URI: $uri\"\n\n    $headers = @{\n        \"Authorization\"        = $signature\n        \"Log-Type\"             = $LogName\n        \"x-ms-date\"            = $rfc1123date\n        \"time-generated-field\" = \"TimeGenerated\"\n    }\n    Write-Debug \"Headers: $($headers | ConvertTo-Json -Compress)\"\n\n    $params = @{\n        Uri                  = $uri\n        Method               = $method\n        ContentType          = $contentType\n        Headers              = $headers\n        Body                 = $logEntry\n        UseBasicParsing      = $true\n        StatusCodeVariable   = 'statusCode'\n    }\n    $response = Invoke-RestMethod @params\n    Write-Debug \"Status Code: $statusCode\"\n    if ($statusCode -ne 200) {\n        throw \"Failed to send log to Sentinel. Status code: $statusCode\"\n    }\n    $response\n}\n\ntry {\n    $logEntry = @{\n        TimeGenerated = [DateTime]::UtcNow.ToString(\"o\")\n        AccountName   = $UserName\n        Event         = \"Password Changed\"\n    } | ConvertTo-Json\n    Write-Debug \"Log entry: $logEntry\"\n\n    $signatureInfo = New-Signature -WorkspaceId $WorkspaceId -WorkspaceKey (decryptSecureString $WorkspaceKey) -LogEntry $logEntry\n    \n    $response = Send-LogToSentinel -WorkspaceId $WorkspaceId -LogName $LogName `\n        -signature $signatureInfo.Signature -rfc1123date $signatureInfo.RFC1123Date `\n        -resource $signatureInfo.Resource -method $signatureInfo.Method `\n        -contentType $signatureInfo.ContentType -logEntry $logEntry\n\n    $true\n} catch {\n    Write-Error \"An error occurred while sending the password change notification: $_\"\n    $false\n}",
    "configurationProperties": [
      {
        "id": "020434de-0d47-4652-848e-12ccb68d583f",
        "isMandatory": true,
        "name": "WorkspaceId"
      },
      {
        "id": "27de8eef-499b-4136-8456-b4234968719c",
        "isMandatory": true,
        "name": "WorkspaceKey",
        "type": 5
      }
    ],
    "description": "Sends a password change notification to Microsoft Sentinel.",
    "executionProperties": [],
    "id": "c096c9f1-d520-4e3c-858e-2636e5fefd83",
    "imageName": "SampleKey2Blue",
    "name": "Microsoft Sentinel Event",
    "parameters": [
      {
        "name": "WorkspaceId",
        "propertyId": "020434de-0d47-4652-848e-12ccb68d583f"
      },
      {
        "name": "WorkspaceKey",
        "propertyId": "27de8eef-499b-4136-8456-b4234968719c"
      },
      {
        "name": "UserName",
        "propertyId": "c24049c5-9ec4-4f26-832c-86f283067c73",
        "source": 1
      },
      {
        "name": "NewPassword",
        "propertyId": "05799f12-c6d9-4266-94f7-42b50e3d4a6b",
        "source": 1
      }
    ],
    "version": 2
  }
}