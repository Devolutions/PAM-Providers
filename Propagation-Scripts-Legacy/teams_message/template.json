{
  "version": 1,
  "template": {
    "command": "[CmdletBinding()]\nparam (\n    [Parameter(Mandatory)]\n    [uri]$WebhookUrl,\n\n    [Parameter(Mandatory)]\n    [string]$UserName,\n\n    [Parameter()]\n    [string]$Message,\n\n    [Parameter()]\n    [string]$ConnectorCardJsonFilePath,\n\n    [Parameter()]\n    [string]$ConnectorCardJson,\n\n    ## This is only a placeholder for AnyID and is not used\n    [Parameter()]\n    [securestring]$NewPassword\n)\n\nfunction invokeApiCall {\n    param (\n        [Parameter(Mandatory)]\n        [ValidateSet('GET', 'POST', 'PUT', 'DELETE')]\n        [string]$method,\n        [Parameter(Mandatory)]\n        [ValidateNotNullOrEmpty()]\n        [string]$body,\n        [Parameter(Mandatory)]\n        [ValidateNotNullOrEmpty()]\n        [hashtable]$headers\n    )\n\n    # Prepare parameters for the Invoke-RestMethod call\n    $irmParams = @{\n        Uri                = $WebhookUrl\n        Body               = $body\n        Headers            = $headers\n        Method             = $method\n        StatusCodeVariable = 'respStatus' # Capture the status code of the API response\n        SkipHttpErrorCheck = $true\n    }\n\n    try {\n        # Make the API call\n        $response = Invoke-RestMethod @irmParams -ErrorAction Stop\n\n        # Check the response status code\n        if ($respStatus -notin (1,200, 202)) {\n            throw \"API call failed with status code $respStatus : $($response.error.message)\"\n        }\n    }\n    catch {\n        throw \"Error occurred while making API call: $_\"\n    }\n}\n\ntry {\n    if ($Message) {\n        $body = ConvertTo-Json @{ text = $Message } -Compress\n    } elseif ($ConnectorCardJsonFilePath) {\n        $body = Get-Content -Path $ConnectorCardJsonFilePath -Raw | ConvertFrom-Json\n    } elseif ($ConnectorCardJson) {\n        $body = $ConnectorCardJson\n    } else {\n        throw \"No valid message parameter provided\"\n    }\n    if ($UserName) {\n        $body = $body -replace '{{username}}', $UserName\n    }\n}\ncatch {\n    throw \"Error preparing message body: $_\"\n}\n\n# Make the API call\ninvokeApiCall -method POST -body $body -headers @{\"Content-Type\" = \"application/json\"}\n",
    "configurationProperties": [
      {
        "id": "8db3d5bc-ed28-4714-8553-94252113cdb8",
        "isMandatory": true,
        "name": "WebhookUrl"
      }
    ],
    "description": "Creates a Teams message or connector cord.",
    "executionProperties": [
      {
        "id": "9a6e1160-a639-47cb-9103-45831a00ceb4",
        "name": "Message"
      },
      {
        "id": "757c18c9-1c0b-479e-9cf5-21cef0688a85",
        "name": "ConnectorCardJsonFilePath"
      },
      {
        "id": "59f3cbce-32ae-4d28-aaec-033f5acb85fa",
        "isMandatory": true,
        "name": "UserName",
        "type": 8
      },
      {
        "id": "08d1c2fc-ef1c-43c1-9455-48fcc9e3afee",
        "name": "ConnectorCardJson"
      }
    ],
    "id": "02b1548d-ba18-4286-b50c-597146082b1e",
    "imageName": "SampleContact2Forest",
    "name": "Microsoft Teams Message"
  }
}